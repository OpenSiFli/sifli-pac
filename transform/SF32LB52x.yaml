transforms:
  # ------------------------------ LPSYS ------------------------------

  # TODO: Should we separate the LCPU peripherals?

  # LPSYS peripherals
  - !DeletePeripherals
      devices: .*
      from: LPSYS_.*

  - !Delete
      from: (?i).*lpsys.*

  # LPSYS peripherals, reserved for lpsys firmware
  - !DeletePeripherals
      devices: .*
      from: (LPTIM3|BTIM[34]|CRC2|PTC2|WDT2|USART[45]|DMAC2)

  #  ------------------------------ Merge Peripherals ------------------------------

  # Merge Register Blocks
  # example: from usart2::Usart2 to usart::Usart
  - !MergeBlocks
      from: \b(\w+)\d+::(\w+)\d+\b
      to: $1::$2

  # Rename Fieldsets to avoid the following delection
  # example: from usart1::regs::cr to usart::regs::cr 
  - !Rename
      type: Fieldset
      from: \b(\w+)1::regs::(\w+)
      to: $1::regs::$2

  # Delete merged items
  - !Delete
      from: \b(\w+)\d+::.*

  # ------------------------------ PINMUX ------------------------------
  # PINMUX pad_pa[39, 42] is different with pad_pa[0, 38], [43, 44]
  
  # pad_pa[0, 38]
  - !MergeFieldsets
      from: hpsys_pinmux::regs::PadPa(0*[0-9]|[1-2][0-9]|3[0-8])\b
      to: hpsys_pinmux::regs::PadPa0_38

  - !MakeRegisterArray
      blocks: hpsys_pinmux::HpsysPinmux
      from: pad_pa(0*[0-9]|[1-2][0-9]|3[0-8])\b
      to: pad_pa0_38

  # pad_pa[39, 42]
  - !MergeFieldsets
      from: hpsys_pinmux::regs::PadPa(39|40|41|42)\b
      to: hpsys_pinmux::regs::PadPa39_42

  - !MakeRegisterArray
      blocks: hpsys_pinmux::HpsysPinmux
      from: pad_pa(39|40|41|42)\b
      to: pad_pa39_42
  
  # pad_pa[43, 44]
  - !MergeFieldsets
      from: hpsys_pinmux::regs::PadPa(43|44)\b
      to: hpsys_pinmux::regs::PadPa43_44

  - !MakeRegisterArray
      blocks: hpsys_pinmux::HpsysPinmux
      from: pad_pa(43|44)\b
      to: pad_pa43_44

  
  - !Add
      ir:
        enum/hpsys_pinmux::vals::Ps:
          bit_size: 1
          variants:
            - name: Down
              value: 0
            - name: Up
              value: 1
        enum/hpsys_pinmux::vals::Is:
          bit_size: 1
          variants:
            - name: Cmos
              value: 0
            - name: Schmitt
              value: 1
        enum/hpsys_pinmux::vals::Sr:
          bit_size: 1
          variants:
            - name: Fast
              value: 0
            - name: Slow
              value: 1
  
  - !ModifyFieldsEnum
      fieldset: hpsys_pinmux::regs::PadPa.*
      field: ps
      enum: hpsys_pinmux::vals::Ps

  - !ModifyFieldsEnum
      fieldset: hpsys_pinmux::regs::PadPa.*
      field: is
      enum: hpsys_pinmux::vals::Is

  - !ModifyFieldsEnum
      fieldset: hpsys_pinmux::regs::PadPa.*
      field: sr
      enum: hpsys_pinmux::vals::Sr
  
  # ------------------------------ GPIO ------------------------------

  # We don't need fields in the GPIO register
  - !DeleteFields
      fieldset: hpsys_gpio::regs::(\w+)r\d+\b
      from: .*

  # - !MergeFieldsets
  #     from: hpsys_gpio::regs::(\w+)r\d+\b
  #     to: hpsys_gpio::regs::$1r
  #     check: Name

  # - !MakeRegisterArray
  #     blocks: hpsys_gpio::HpsysGpio
  #     from: (\w+)r\d+\b
  #     to: $1r
  #     mode: Cursed

  # ------------------------------ RCC ------------------------------
  - !MergeFieldsets
      from: hpsys_rcc::regs::Dll\d+cr
      to: hpsys_rcc::regs::Dllcr
  - !MakeRegisterArray
      blocks: hpsys_rcc::HpsysRcc
      from: dll\d+cr
      to: dllcr

  - !Add
      ir:
        #--- CSR ---
        enum/hpsys_rcc::vals::SelUsbc:
          bit_size: 1
          variants:
            - name: ClkSys
              value: 0
            - name: Dll2
              value: 1
        enum/hpsys_rcc::vals::SelTick:
          bit_size: 2
          variants:
            - name: ClkRtc
              value: 0
            - name: Hrc48
              value: 2
            - name: Hxt48
              value: 3
        enum/hpsys_rcc::vals::SelPeri:
          bit_size: 1
          variants:
            - name: Hrc48
              value: 0
            - name: Hxt48
              value: 1
        enum/hpsys_rcc::vals::SelSys:
          bit_size: 2
          variants:
            - name: Hrc48
              value: 0
            - name: Hxt48
              value: 1
            - name: Dbl96
              value: 2
            - name: Dll1
              value: 3

  - !ModifyFieldsEnum
      fieldset: hpsys_rcc::regs::Csr
      field: sel_usbc
      enum: hpsys_rcc::vals::SelUsbc

  - !ModifyFieldsEnum
      fieldset: hpsys_rcc::regs::Csr
      field: sel_tick
      enum: hpsys_rcc::vals::SelTick

  - !ModifyFieldsEnum
      fieldset: hpsys_rcc::regs::Csr
      field: sel_peri
      enum: hpsys_rcc::vals::SelPeri

  - !ModifyFieldsEnum
      fieldset: hpsys_rcc::regs::Csr
      field: sel_sys
      enum: hpsys_rcc::vals::SelSys

  # ------------------------------ USART ------------------------------

  # #define USART_RQR_SBKRQ_Pos (1U)
  - !RenameFields
      fieldset: usart::regs::Rqr
      from: rsvd3
      to: sbkrq

  # #define USART_ISR_SBKF_Pos (18U)
  - !RenameFields
      fieldset: usart::regs::Isr
      from: rsvd8
      to: sbkf

  #define USART_CR3_HDSEL_Pos (3U)
  - !RenameFields
      fieldset: usart::regs::Cr3
      from: rsvd13
      to: hdsel

  - !Add
      ir:
        # --- CR1 ---
        enum/usart::vals::M:
          bit_size: 2
          variants:
          - name: Bit6
            value: 0
          - name: Bit7
            value: 1
          - name: Bit8
            description: 1 start bit, 8 data bits, n stop bits
            value: 2
          - name: Bit9
            description: 1 start bit, 9 data bits, n stop bits
            value: 3
        enum/usart::vals::OVER8:
          bit_size: 1
          variants:
          - name: Oversampling16
            description: Oversampling by 16
            value: 0
          - name: Oversampling8
            description: Oversampling by 8
            value: 1
        enum/usart::vals::PS:
          bit_size: 1
          variants:
          - name: Even
            description: Even parity
            value: 0
          - name: Odd
            description: Odd parity
            value: 1
        # --- CR2 ---
        enum/usart::vals::STOP:
          bit_size: 2
          variants:
          - name: Stop1
            description: 1 stop bit
            value: 0
          - name: Stop1_
            description: 1 stop bit
            value: 1
          - name: Stop2
            description: 2 stop bits
            value: 2
          - name: Stop2_
            description: 2 stop bits
            value: 3
  
  - !ModifyFieldsEnum
      fieldset: usart::regs::Cr1
      field: m
      enum: usart::vals::M
  
  - !ModifyFieldsEnum
      fieldset: usart::regs::Cr1
      field: over8
      enum: usart::vals::OVER8
  
  - !ModifyFieldsEnum
      fieldset: usart::regs::Cr1
      field: ps
      enum: usart::vals::PS
  
  - !ModifyFieldsEnum
      fieldset: usart::regs::Cr2
      field: stop
      enum: usart::vals::STOP

  # ------------------------------ TIM ------------------------------
  
  # Special cases: ATIM.CCxIE, CCxIF, they are not linearly distributed. So we use Cursed mode
  - !MakeFieldArray
      fieldsets: atim::regs::.*
      from: cc\d+(ie|if)
      to: cc$1
      mode: Cursed
  
  - !MakeFieldArray
      fieldsets: .*tim::regs::.*
      from: (ois|cc|ic|oc)\d+(\w*)
      to: $1$2

  - !MakeRegisterArray
      blocks: .*tim::.*tim
      from: ccr\d+
      to: ccr
      mode: Cursed
  - !RenameFields
      fieldset: .*tim::regs::Ccr\d+
      from: ccr\d+
      to: ccr
  - !MergeFieldsets
      from: atim::regs::Ccr\d+
      to: atim::regs::Ccr
  - !MergeFieldsets
      from: gptim::regs::Ccr\d+
      to: gptim::regs::Ccr

  - !Add
      ir:
        # --- CR1 ---
        enum/tim_common::vals::URS:
          bit_size: 1
          variants:
          - name: AnyEvent
            description: Any of counter overflow/underflow, setting UG, or update through slave mode, generates an update interrupt or DMA request
            value: 0
          - name: CounterOnly
            description: Only counter overflow/underflow generates an update interrupt or DMA request
            value: 1
        enum/tim_common::vals::CMS:
          bit_size: 2
          variants:
          - name: EdgeAligned
            description: The counter counts up or down depending on the direction bit
            value: 0
          - name: CenterAligned1
            description: The counter counts up and down alternatively. Output compare interrupt flags are set only when the counter is counting down.
            value: 1
          - name: CenterAligned2
            description: The counter counts up and down alternatively. Output compare interrupt flags are set only when the counter is counting up.
            value: 2
          - name: CenterAligned3
            description: The counter counts up and down alternatively. Output compare interrupt flags are set both when the counter is counting up or down.
            value: 3
        enum/tim_common::vals::DIR:
          bit_size: 1
          variants:
          - name: Up
            description: Counter used as upcounter
            value: 0
          - name: Down
            description: Counter used as downcounter
            value: 1
        # --- CR2 ---
        enum/tim_common::vals::CCDS:
          bit_size: 1
          variants:
          - name: OnCompare
            description: CCx DMA request sent when CCx event occurs
            value: 0
          - name: OnUpdate
            description: CCx DMA request sent when update event occurs
            value: 1
        enum/tim_common::vals::MMS:
          bit_size: 3
          variants:
          - name: Reset
            description: The UG bit from the TIMx_EGR register is used as trigger output
            value: 0
          - name: Enable
            description: The counter enable signal, CNT_EN, is used as trigger output
            value: 1
          - name: Update
            description: The update event is selected as trigger output
            value: 2
          - name: ComparePulse
            description: The trigger output send a positive pulse when the CC1IF flag it to be set, as soon as a capture or a compare match occurred
            value: 3
          - name: CompareOC1
            description: OC1REF signal is used as trigger output
            value: 4
          - name: CompareOC2
            description: OC2REF signal is used as trigger output
            value: 5
          - name: CompareOC3
            description: OC3REF signal is used as trigger output
            value: 6
          - name: CompareOC4
            description: OC4REF signal is used as trigger output
            value: 7
        enum/tim_common::vals::TI1S:
          bit_size: 1
          variants:
          - name: Normal
            description: The TIMx_CH1 pin is connected to TI1 input
            value: 0
          - name: XOR
            description: The TIMx_CH1, CH2, CH3 pins are connected to TI1 input
            value: 1
        # --- SMCR ---
        enum/tim_common::vals::ETP:
          bit_size: 1
          variants:
          - name: NotInverted
            description: ETR is noninverted, active at high level or rising edge
            value: 0
          - name: Inverted
            description: ETR is inverted, active at low level or falling edge
            value: 1
        enum/tim_common::vals::ETPS:
          bit_size: 2
          variants:
          - name: Div1
            description: Prescaler OFF
            value: 0
          - name: Div2
            description: ETRP frequency divided by 2
            value: 1
          - name: Div4
            description: ETRP frequency divided by 4
            value: 2
          - name: Div8
            description: ETRP frequency divided by 8
            value: 3
        enum/tim_common::vals::ETF:
          bit_size: 4
          variants:
          - name: NoFilter
            description: No filter, sampling is done at fDTS
            value: 0
          - name: FCK_INT_N2
            description: fSAMPLING=fCK_INT, N=2
            value: 1
          - name: FCK_INT_N4
            description: fSAMPLING=fCK_INT, N=4
            value: 2
          - name: FCK_INT_N8
            description: fSAMPLING=fCK_INT, N=8
            value: 3
          - name: FDTS_Div2_N6
            description: fSAMPLING=fDTS/2, N=6
            value: 4
          - name: FDTS_Div2_N8
            description: fSAMPLING=fDTS/2, N=8
            value: 5
          - name: FDTS_Div4_N6
            description: fSAMPLING=fDTS/4, N=6
            value: 6
          - name: FDTS_Div4_N8
            description: fSAMPLING=fDTS/4, N=8
            value: 7
          - name: FDTS_Div8_N6
            description: fSAMPLING=fDTS/8, N=6
            value: 8
          - name: FDTS_Div8_N8
            description: fSAMPLING=fDTS/8, N=8
            value: 9
          - name: FDTS_Div16_N5
            description: fSAMPLING=fDTS/16, N=5
            value: 10
          - name: FDTS_Div16_N6
            description: fSAMPLING=fDTS/16, N=6
            value: 11
          - name: FDTS_Div16_N8
            description: fSAMPLING=fDTS/16, N=8
            value: 12
          - name: FDTS_Div32_N5
            description: fSAMPLING=fDTS/32, N=5
            value: 13
          - name: FDTS_Div32_N6
            description: fSAMPLING=fDTS/32, N=6
            value: 14
          - name: FDTS_Div32_N8
            description: fSAMPLING=fDTS/32, N=8
            value: 15
        enum/tim_common::vals::MSM:
          bit_size: 1
          variants:
          - name: NoSync
            description: No action
            value: 0
          - name: Sync
            description: The effect of an event on the trigger input (TRGI) is delayed to allow a perfect synchronization between the current timer and its slaves (through TRGO). It is useful if we want to synchronize several timers on a single external event.
            value: 1
        enum/tim_common::vals::SMS:
          bit_size: 4
          variants:
          - name: Disabled
            description: Slave mode disabled - if CEN = '1' then the prescaler is clocked directly by the internal clock.
            value: 0
          - name: Encoder_Mode_1
            description: Encoder mode 1 - Counter counts up/down on TI2FP1 edge depending on TI1FP2 level.
            value: 1
          - name: Encoder_Mode_2
            description: Encoder mode 2 - Counter counts up/down on TI1FP2 edge depending on TI2FP1 level.
            value: 2
          - name: Encoder_Mode_3
            description: Encoder mode 3 - Counter counts up/down on both TI1FP1 and TI2FP2 edges depending on the level of the other input.
            value: 3
          - name: Reset_Mode
            description: Reset Mode - Rising edge of the selected trigger input (TRGI) reinitializes the counter and generates an update of the registers.
            value: 4
          - name: Gated_Mode
            description: Gated Mode - The counter clock is enabled when the trigger input (TRGI) is high. The counter stops (but is not reset) as soon as the trigger becomes low. Both start and stop of the counter are controlled.
            value: 5
          - name: Trigger_Mode
            description: Trigger Mode - The counter starts at a rising edge of the trigger TRGI (but it is not reset). Only the start of the counter is controlled.
            value: 6
          - name: Ext_Clock_Mode
            description: External Clock Mode 1 - Rising edges of the selected trigger (TRGI) clock the counter.
            value: 7
          - name: Combined_Reset_Trigger
            description: Rising edge of the selected trigger input (tim_trgi) reinitializes the counter, generates an update of the registers and starts the counter.
            value: 8
        enum/tim_common::vals::TS:
          bit_size: 5
          variants:
          - name: ITR0
            description: Internal Trigger 0
            value: 0
          - name: ITR1
            description: Internal Trigger 1
            value: 1
          - name: ITR2
            description: Internal Trigger 2
            value: 2
          - name: ITR3
            description: Internal Trigger 3
            value: 3
          - name: TI1F_ED
            description: TI1 Edge Detector
            value: 4
          - name: TI1FP1
            description: Filtered Timer Input 1
            value: 5
          - name: TI2FP2
            description: Filtered Timer Input 2
            value: 6
          - name: ETRF
            description: External Trigger input
            value: 7
  
  - !ModifyFieldsEnum
      fieldset: (\w+)tim::regs::Cr1
      field: urs
      enum: tim_common::vals::URS

  - !ModifyFieldsEnum
      fieldset: (\w+)tim::regs::Cr1
      field: cms
      enum: tim_common::vals::CMS

  - !ModifyFieldsEnum
      fieldset: (\w+)tim::regs::Cr1
      field: dir
      enum: tim_common::vals::DIR

  - !ModifyFieldsEnum
    fieldset: (\w+)tim::regs::Cr2
    field: ccds
    enum: tim_common::vals::CCDS

  - !ModifyFieldsEnum
      fieldset: (\w+)tim::regs::Cr2
      field: mms
      enum: tim_common::vals::MMS

  - !ModifyFieldsEnum
      fieldset: (\w+)tim::regs::Cr2
      field: ti1s
      enum: tim_common::vals::TI1S

  - !ModifyFieldsEnum
    fieldset: (\w+)tim::regs::Smcr
    field: etp
    enum: tim_common::vals::ETP

  - !ModifyFieldsEnum
      fieldset: (\w+)tim::regs::Smcr
      field: etps
      enum: tim_common::vals::ETPS

  - !ModifyFieldsEnum
      fieldset: (\w+)tim::regs::Smcr
      field: etf
      enum: tim_common::vals::ETF

  - !ModifyFieldsEnum
      fieldset: (\w+)tim::regs::Smcr
      field: msm
      enum: tim_common::vals::MSM

  - !ModifyFieldsEnum
      fieldset: (\w+)tim::regs::Smcr
      field: sms
      enum: tim_common::vals::SMS

  - !ModifyFieldsEnum
      fieldset: (\w+)tim::regs::Smcr
      field: ts
      enum: tim_common::vals::TS


  # ------------------------------ GPADC ------------------------------
  
  # Rename adc_xxx to xxx
  - !Rename
      type: All
      from: gpadc::(.*)adc_(.*)
      to: gpadc::$1$2

  - !Rename
      type: All
      from: gpadc::regs::Adc(.*)
      to: gpadc::regs::$1

  - !RenameRegisters
      block: gpadc::Gpadc
      from: adc_(.*)
      to: $1
  
  - !MakeRegisterArray
      blocks: gpadc::Gpadc
      from: slot\d+_reg
      to: slot

  - !RenameFields
      fieldset: gpadc::regs::Rdata\d+
      from: slot(1|3|5|7)_rdata
      to: odd_slot_rdata
  
  - !RenameFields
      fieldset: gpadc::regs::Rdata\d+
      from: slot(0|2|4|6)_rdata
      to: even_slot_rdata
      
  - !MergeFieldsets
      from: gpadc::regs::Rdata\d+
      to: gpadc::regs::Rdata

  - !MakeRegisterArray
      blocks: gpadc::Gpadc
      from: rdata\d+
      to: rdata

  - !Add
      ir:
        #--- CFG_REG1 ---
        enum/gpadc::vals::Vsp:
          bit_size: 2
          variants:
            - name: V0_539
              description: "Set comparator input CM in sampling phase to 0.539V"
              value: 0
            - name: V0_578
              description: "Set comparator input CM in sampling phase to 0.578V"
              value: 1
            - name: V0_642
              description: "Set comparator input CM in sampling phase to 0.642V"
              value: 2
            - name: V0_784
              description: "Set comparator input CM in sampling phase to 0.784V"
              value: 3
        #--- CTRL_REG ---
        enum/gpadc::vals::DmaDataSel:
          bit_size: 1
          variants:
            - name: Combined
              description: "DMA data is combined data"
              value: 0
            - name: Raw
              description: "DMA data is raw data"
              value: 1
        enum/gpadc::vals::TimerTrigTyp:
          bit_size: 1
          variants:
            - name: Pulse
              description: "Timer trigger type is pulse, no edge detect needed"
              value: 0
            - name: Level
              description: "Timer trigger type is level, edge detect needed"
              value: 1
        enum/gpadc::vals::OpMode:
          bit_size: 1
          variants:
            - name: Single
              description: "Single conversion mode"
              value: 0
            - name: Continuous
              description: "Continuous conversion mode"
              value: 1

  - !ModifyFieldsEnum
      fieldset: gpadc::regs::CfgReg1
      field: anau_gpadc_vsp
      enum: gpadc::vals::Vsp

  - !ModifyFieldsEnum
      fieldset: gpadc::regs::CtrlReg
      field: dma_data_sel
      enum: gpadc::vals::DmaDataSel

  - !ModifyFieldsEnum
      fieldset: gpadc::regs::CtrlReg
      field: timer_trig_typ
      enum: gpadc::vals::TimerTrigTyp

  - !ModifyFieldsEnum
      fieldset: gpadc::regs::CtrlReg
      field: op_mode
      enum: gpadc::vals::OpMode

  # ------------------------------ Delete Reserved ------------------------------
  # Delete Reserved Fieldsets, Registers, Fields.
  # this should go after transforms that use rsvd*
  - !DeleteFieldsets
      from: Rsvd.*

  - !DeleteRegisters
      block: .*
      from: rsvd.*

  - !DeleteFields
      fieldset: .*
      from: rsvd.*

  # ------------------------------ Interrupts ------------------------------
  # Add interrupts table
  - !AddInterrupts
      devices: .*
      interrupts:
        - name: LPTIM1   
          value: 46      
        - name: LPTIM2   
          value: 47      
        - name: PMUC     
          value: 48      
        - name: RTC      
          value: 49      
        - name: DMAC1_CH1
          value: 50      
        - name: DMAC1_CH2
          value: 51      
        - name: DMAC1_CH3
          value: 52      
        - name: DMAC1_CH4
          value: 53      
        - name: DMAC1_CH5
          value: 54      
        - name: DMAC1_CH6
          value: 55      
        - name: DMAC1_CH7
          value: 56
        - name: DMAC1_CH8
          value: 57
        - name: MAILBOX2_CH1
          value: 58
        - name: USART1
          value: 59
        - name: SPI1
          value: 60
        - name: I2C1
          value: 61
        - name: EPIC
          value: 62
        - name: LCDC1
          value: 63
        - name: I2S1
          value: 64
        - name: GPADC
          value: 65
        - name: EFUSEC
          value: 66
        - name: AES
          value: 67
        - name: PTC1
          value: 68
        - name: TRNG
          value: 69
        - name: GPTIM1
          value: 70
        - name: GPTIM2
          value: 71
        - name: BTIM1
          value: 72
        - name: BTIM2
          value: 73
        - name: USART2
          value: 74
        - name: SPI2
          value: 75
        - name: I2C2
          value: 76
        - name: EXTDMA
          value: 77
        - name: I2C4
          value: 78
        - name: SDMMC1
          value: 79
        - name: MAILBOX2_CH2
          value: 80
        - name: PDM1
          value: 82
        - name: GPIO1
          value: 84
        - name: MPI1
          value: 85
        - name: MPI2
          value: 86
        - name: EZIP1
          value: 89
        - name: AUDPRC
          value: 90
        - name: TSEN
          value: 91
        - name: USBC
          value: 92
        - name: I2C3
          value: 93
        - name: ATIM1
          value: 94
        - name: USART3
          value: 95
        - name: AUD_HP
          value: 96
        - name: SECU1
          value: 98
